pipelines:
    options:
        max-time: 20
    custom:
        win32-installer:
            - parallel:
                - step:
                    name: User's Guide
                    image: natcap/userguide-build:fba743220031e1ba99b528a8939a86c8201da949
                    script:
                        # If setup.py --version fails, we'll get bad version
                        # info in the UG build.
                        - python setup.py --version
                        - make userguide
                    artifacts:
                        - dist/userguide/**
                        - dist/*.pdf
                        - dist/*.zip
                - step:
                    name: Sample Data
                    image: debian:9.7
                    script:
                        - apt-get update && apt-get install -y subversion
                            mercurial build-essential zip python-setuptools
                            python-numpy python-setuptools-scm cython
                        - make sampledata
                    artifacts:
                        - dist/data/*
                        - data/invest-data/*.json
                - step:
                    name: Python Binaries
                    image: natcap/py27-wine-build:117580cbeba1c9c21634c30d749a052fb5bb7936
                    caches:
                        - pip
                    script:
                        - export PIP_CACHE_DIR=$HOME/.cache/pip
                        - wine make env
                        - wine env/scripts/python.exe -m pip --cache-dir=$PIP_CACHE_DIR install --upgrade .
                        - wine env/scripts/python.exe -m pip --cache-dir=$PIP_CACHE_DIR install
                            -r requirements-gui.txt
                            -r requirements-dev.txt
                            -r requirements.txt
                        - wine make PYTHON=env/scripts/python.exe binaries
                    artifacts:
                        - dist/*.whl
            - step:
                name: NSIS Installer
                image: natcap/py27-wine-build:117580cbeba1c9c21634c30d749a052fb5bb7936
                script:
                    # First, need to put the vcredist into the right place (no powershell under WINE)
                    - make build
                    - wget -nv -O build/vcredist_x86.exe
                        https://download.microsoft.com/download/5/D/8/5D8C65CB-C849-4025-8E95-C3966CAFD8AE/vcredist_x86.exe

                    # Make relies on timestamps to check whether the targets need to be rebuilt,
                    # so touching the needed artifacts will make sure that Make uses these
                    # artifacts instead of rebuilding.
                    - mkdir doc/users-guide
                    - touch dist/*.pdf dist/userguide data/invest-data

                    # Now we can run make.
                    # Need to set PYTHON_ARCH because for some reason the
                    # string isn't being correctly set.
                    - wine make PYTHON_ARCH=x86 windows_installer
                artifacts:
                    - dist/*.exe
            - step:
                name: Deploy to bucket
                image: google/cloud-sdk:latest
                script:
                    # Build tools needed for running setup.py
                    - apt-get install -y make python-numpy cython python-pip mercurial
                    - pip install setuptools_scm

                    # Authenticate with the service account key and upload files to bucket.
                    - echo ${GOOGLE_SERVICE_ACC_KEY} > client-secret.json
                    - gcloud auth activate-service-account --key-file=client-secret.json
                    - make deploy
    default:
        - parallel:
            - step:
                name: Model tests on WINE
                image: natcap/py27-wine-build:117580cbeba1c9c21634c30d749a052fb5bb7936
                max-time: 15
                caches:
                    - pip
                script:
                    - make data/invest-test-data
                    - wine python -m virtualenv --system-site-packages env
                    - wine env/Scripts/python -m pip install -r requirements.txt -r requirements-gui.txt
                    - wine env/Scripts/python -m pip install -I -r requirements-dev.txt
                    - wine env/Scripts/python setup.py bdist_wheel
                    - wine env/Scripts/python -m pip install -I --no-deps dist/*.whl
                    - wine env/Scripts/python -m nose -vsP --with-coverage --with-timer --cover-package=natcap.invest tests
                artifacts:
                    - dist/*.whl
